CREATE SEQUENCE MAIN_ACCT_SEQ START WITH 1 INCREMENT BY 1 CACHE 1000 NOCYCLE;

CREATE TABLE MAIN_ACCOUNTS (
    ACCOUNT_ID       NUMBER(19) PRIMARY KEY,
    CUSTOMER_ID      NUMBER(19) NOT NULL,
    STATUS           VARCHAR2(20) NOT NULL CHECK (STATUS IN ('ACTIVE', 'BLOCKED', 'CLOSED')),
    AVAILABLE_BALANCE NUMBER(10,2) DEFAULT 0 NOT NULL,
    CREDIT_LIMIT     NUMBER(10,2) NOT NULL,
    CREATED_AT       TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    UPDATED_AT       TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

-- Trigger for automatic updated_at
CREATE OR REPLACE TRIGGER TRG_UPDATE_MAIN_ACCOUNTS
BEFORE UPDATE ON MAIN_ACCOUNTS
FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := SYSTIMESTAMP;
END;
/

CREATE SEQUENCE MAIN_TXN_SEQ START WITH 1 INCREMENT BY 1 CACHE 1000 NOCYCLE;

CREATE TABLE MAIN_TRANSACTIONS (
    TRANSACTION_ID   NUMBER(19) PRIMARY KEY,
    ACCOUNT_ID       NUMBER(19) NOT NULL,
    MERCHANT_ID      NUMBER(19),
    AMOUNT           NUMBER(10,2) NOT NULL,
    CURRENCY         CHAR(3) DEFAULT 'USD' NOT NULL,
    STATUS           VARCHAR2(20) NOT NULL CHECK (STATUS IN ('INITIATED', 'AUTHORIZED', 'REJECTED', 'COMPLETED')),
    INITIATED_AT     TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    COMPLETED_AT     TIMESTAMP,
    UPDATED_AT       TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    PROMO_APPLIED    CHAR(1) DEFAULT 'N' NOT NULL CHECK (PROMO_APPLIED IN ('Y','N')),
    EXTERNAL_REF_ID  VARCHAR2(100),
    CONSTRAINT UQ_EXTERNAL_REF UNIQUE (EXTERNAL_REF_ID),
    CONSTRAINT FK_TXN_ACCT FOREIGN KEY (ACCOUNT_ID) REFERENCES MAIN_ACCOUNTS(ACCOUNT_ID)
)
PARTITION BY RANGE (INITIATED_AT) (
    PARTITION P_2024 VALUES LESS THAN (TO_DATE('01-JAN-2025','DD-MON-YYYY')),
    PARTITION P_2025 VALUES LESS THAN (TO_DATE('01-JAN-2026','DD-MON-YYYY'))
);

-- Trigger for automatic updated_at
CREATE OR REPLACE TRIGGER TRG_UPDATE_MAIN_TRANSACTIONS
BEFORE UPDATE ON MAIN_TRANSACTIONS
FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := SYSTIMESTAMP;
END;
/

-- Indexes
CREATE INDEX IDX_TXN_ACCOUNT_STATUS ON MAIN_TRANSACTIONS(ACCOUNT_ID, STATUS);
CREATE INDEX IDX_TXN_MERCHANT_DATE ON MAIN_TRANSACTIONS(MERCHANT_ID, INITIATED_AT);


CREATE SEQUENCE MAIN_OUTBOX_SEQ START WITH 1 INCREMENT BY 1 CACHE 1000 NOCYCLE;

CREATE TABLE MAIN_OUTBOX_EVENTS (
    EVENT_ID      NUMBER(19) PRIMARY KEY,
    EVENT_TYPE    VARCHAR2(100) NOT NULL,
    AGGREGATE_ID  NUMBER(19),
    PAYLOAD       CLOB NOT NULL,
    STATUS        VARCHAR2(20) DEFAULT 'PENDING' NOT NULL CHECK (STATUS IN ('PENDING','PUBLISHED','FAILED')),
    CREATED_AT    TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    PUBLISHED_AT  TIMESTAMP
);